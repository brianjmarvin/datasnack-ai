{
  "active": true,
  "connections": {
    "API docs": {
      "ai_tool": [
        [
          {
            "index": 0,
            "node": "Joke agent",
            "type": "ai_tool"
          }
        ]
      ]
    },
    "Joke API": {
      "ai_tool": [
        [
          {
            "index": 0,
            "node": "Joke agent",
            "type": "ai_tool"
          }
        ]
      ]
    },
    "Joke agent": {
      "main": [
        [
          {
            "node": "Webhook Response",
            "type": "main"
          }
        ]
      ]
    },
    "Memory": {
      "ai_memory": [
        [
          {
            "index": 0,
            "node": "Joke agent",
            "type": "ai_memory"
          }
        ]
      ]
    },
    "Model": {
      "ai_languageModel": [
        [
          {
            "index": 0,
            "node": "Joke agent",
            "type": "ai_languageModel"
          }
        ]
      ]
    },
    "Webhook Trigger": {
      "main": [
        [
          {
            "index": 0,
            "node": "Joke agent",
            "type": "main"
          }
        ]
      ]
    }
  },
  "id": "rKTIq0JCl0vQOBtM",
  "meta": {
    "instanceId": "5a49ac8bc1aabfca6d8f0dd9d69ed69a16b889c66aeabf60a6d5c49ba7f770a5",
    "templateCredsSetupCompleted": true,
    "templateId": "joke_agent_with_http_tool"
  },
  "name": "Joke agent (with HTTP tool)",
  "nodes": [
    {
      "disabled": true,
      "id": "10870665-8098-49d9-b36a-843227a25ec8",
      "name": "When chat message received",
      "parameters": {
        "options": {}
      },
      "position": [
        -672,
        0
      ],
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.3,
      "webhookId": "90f0993e-31ff-4523-8dbc-613465d12b64"
    },
    {
      "id": "a9615eac-7845-4f4f-a5b0-fdec59f3751e",
      "name": "Joke API",
      "parameters": {
        "options": {},
        "queryParameters": {
          "parameters": [
            {
              "name": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters0_Name', ``, 'string') }}",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters0_Value', ``, 'string') }}"
            }
          ]
        },
        "sendQuery": true,
        "toolDescription": "Use this tool to retrieve jokes",
        "url": "https://v2.jokeapi.dev/joke/"
      },
      "position": [
        -224,
        256
      ],
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2
    },
    {
      "id": "a8f4b23a-89cb-4673-a595-6855ba1a6d10",
      "name": "API docs",
      "parameters": {
        "onlyContent": true,
        "optimizeResponse": true,
        "options": {},
        "responseType": "html",
        "toolDescription": "Use this tool to read about the joke api documentation, so that you can filter queries to the api based on the user prompt.",
        "url": "https://v2.jokeapi.dev/"
      },
      "position": [
        -48,
        256
      ],
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2
    },
    {
      "credentials": {
        "openAiApi": {
          "id": "75XIm1L6OQOjY42i",
          "name": "OpenAi account 2"
        }
      },
      "id": "93fdc1ff-4dee-4f7f-8b37-b8c041a22073",
      "name": "Model",
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "position": [
        -576,
        272
      ],
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2
    },
    {
      "id": "8ca3ae47-7e3d-42ed-ac35-bf2f187715eb",
      "name": "Memory",
      "parameters": {},
      "position": [
        -400,
        272
      ],
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3
    },
    {
      "id": "fb541fe9-749d-4f22-a171-3a16eb1bdb4c",
      "name": "Joke agent",
      "parameters": {
        "options": {
          "systemMessage": "# Joke Agent System Prompt\n\nYou are a fun and entertaining joke bot that brings laughter and good vibes to conversations. Your job is to tell jokes, share humor, and keep things light and cheerful.\n\n## Your Main Purpose\n\n- Tell jokes using the Joke API when users ask for them\n- Be funny, witty, and entertaining\n- Keep conversations upbeat and positive\n- Share different types of humor to match user preferences\n\n## How to Use the Joke API\n\n- Use the Joke API tool whenever users ask for jokes\n- You can check the API docs if you need to understand how to filter for specific things\n- The API provides various joke categories and formats\n- You can request specific types of jokes if users have preferences\n- Always deliver the jokes with enthusiasm and good timing\n\n## Interaction Style\n\n### When Users Ask for Jokes\n- Use the Joke API to fetch fresh jokes\n- Present jokes with good comedic timing\n- Add your own flair or setup if appropriate\n- Ask if they'd like to hear more\n\n### General Conversation\n- Keep things light and fun\n- Use humor naturally in responses\n- Be encouraging and positive\n- Remember previous jokes to avoid repetition\n\n### Types of Humor to Offer\n- Clean, family-friendly jokes (default)\n- Dad jokes and puns\n- Programming/tech jokes (if appropriate)\n- One-liners and quick wit\n- Knock-knock jokes\n\n## Response Guidelines\n\n### Joke Delivery\n- Build up anticipation when appropriate\n- Use proper timing and pacing\n- Add enthusiasm with your tone\n- Follow up with \"Got another one?\" or similar\n\n### Conversation Flow\n- Remember what makes users laugh\n- Adapt to their humor preferences\n- Keep the mood upbeat\n- Transition smoothly between jokes and chat\n\n### Examples of Good Responses\n\n**User**: \"Tell me a joke\"\n**You**: \"Coming right up! Let me grab a good one for you...\" *[uses Joke API]* \n\n**User**: \"That was terrible!\"\n**You**: \"Hey, they can't all be winners! ðŸ˜„ Want me to try again with a different style?\"\n\n**User**: \"Got any programming jokes?\"\n**You**: \"Oh, I love tech humor! Let me find you a good one...\" *[uses Joke API]*\n\n## Keep It Fun\n\n- Stay positive and encouraging\n- Laugh along with users\n- Don't take yourself too seriously\n- Make people smile and brighten their day\n- If a joke doesn't land, just move on cheerfully\n\nRemember: Your goal is to spread joy and laughter. Keep things fun, appropriate, and entertaining!"
        }
      },
      "position": [
        -448,
        0
      ],
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2
    },
    {
      "id": "fd4fc7ea-30bf-42d1-8bb6-4026ef12e95c",
      "name": "Sticky Note",
      "parameters": {
        "color": 5,
        "content": "### Joke Agent\nA chat-based joke agent that uses the Joke API and an AI model to deliver fun, personalized jokes and keep conversations entertaining.\n\n#### Set up\n- Configure your credentials in the Model node\n- Open the chat and start talking to your agent\n\n#### Next steps\nYou can apply this pattern to any website or API, try connecting the docs of a tool you use regularly but remember to change the system prompt.\n",
        "height": 400,
        "width": 304
      },
      "position": [
        -1088,
        -32
      ],
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1
    },
    {
      "id": "d0d0d0d0-0000-0000-0000-000000000001",
      "name": "Webhook Trigger",
      "parameters": {
        "httpMethod": "POST",
        "options": {
          "rawBody": true
        },
        "path": "evaluate",
        "responseMode": "responseNode"
      },
      "position": [
        -800,
        0
      ],
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1.1,
      "webhookId": "unique-webhook-id"
    },
    {
      "id": "d0d0d0d0-0000-0000-0000-000000000002",
      "name": "Webhook Response",
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $json }}",
        "responseHeaders": {
          "headers": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        }
      },
      "position": [
        -200,
        0
      ],
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "tags": [],
  "versionId": "11e558cf-93af-442e-a4f6-888a3c7844d1"
}